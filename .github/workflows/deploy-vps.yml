name: Deploy to VPS

on:
  push:
    branches: [main]
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            
            # Variables
            APP_DIR="/var/www/landings"
            PM2_APP="landings"
            
            echo "üöÄ Deploy autom√°tico desde GitHub"
            
            # 1. Ir al directorio
            cd $APP_DIR
            
            # 2. Descartar cambios locales y forzar actualizaci√≥n
            echo "üîÑ Descartando cambios locales y actualizando..."
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
            
            # 3. Instalar dependencias si cambiaron
            if git diff HEAD@{1} --name-only | grep -q "package-lock.json"; then
              echo "üì¶ Actualizando dependencias..."
              npm install --legacy-peer-deps
            else
              # Siempre verificar que las dependencias est√©n instaladas
              echo "üì¶ Verificando dependencias..."
              npm install --legacy-peer-deps
            fi
            
            # 4. Build de producci√≥n con memoria limitada y variable VPS
            echo "üèóÔ∏è Building..."
            export NODE_OPTIONS="--max-old-space-size=768"
            export NEXT_TELEMETRY_DISABLED=1
            export NEXT_PUBLIC_IS_VPS=true
            npm run build
            
            # 5. Reiniciar con PM2
            pm2 restart $PM2_APP --update-env
            pm2 save
            
            echo "‚úÖ Deploy completado"